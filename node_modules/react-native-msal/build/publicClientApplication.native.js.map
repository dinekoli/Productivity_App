{"version":3,"file":"publicClientApplication.native.js","sourceRoot":"","sources":["../src/publicClientApplication.native.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAExC,OAAO,MAAM,MAAM,gBAAgB,CAAC;AAUpC,MAAM,OAAO,uBAAuB;IAGL;IAFrB,aAAa,GAAY,KAAK,CAAC;IAEvC,YAA6B,MAAyB;QAAzB,WAAM,GAAN,MAAM,CAAmB;IAAG,CAAC;IAEnD,KAAK,CAAC,IAAI;QACf,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,MAAM,MAAM,CAAC,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACxD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,MAA6B;QACrD,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,OAAO,MAAM,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IAEM,KAAK,CAAC,kBAAkB,CAAC,MAAwB;QACtD,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,OAAO,MAAM,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;IAEM,KAAK,CAAC,WAAW;QACtB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,OAAO,MAAM,MAAM,CAAC,WAAW,EAAE,CAAC;IACpC,CAAC;IAEM,KAAK,CAAC,UAAU,CAAC,iBAAyB;QAC/C,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,OAAO,MAAM,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;IACpD,CAAC;IAEM,KAAK,CAAC,aAAa,CAAC,OAAoB;QAC7C,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,OAAO,MAAM,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAC7C,CAAC;IAEM,KAAK,CAAC,OAAO,CAAC,MAAyB;QAC5C,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,OAAO,MAAM,QAAQ,CAAC,MAAM,CAAC;YAC3B,GAAG,EAAE,KAAK,IAAI,EAAE,CAAC,MAAM,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YAC7C,OAAO,EAAE,KAAK,IAAI,EAAE,CAAC,MAAM,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC;SAChE,CAAC,EAAE,CAAC;IACP,CAAC;IAEO,qBAAqB;QAC3B,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,MAAM,IAAI,KAAK,CACb,sGAAsG,CACvG,CAAC;SACH;IACH,CAAC;CACF","sourcesContent":["import { Platform } from 'react-native';\n\nimport RNMSAL from './nativeModule';\nimport type {\n  MSALConfiguration,\n  MSALInteractiveParams,\n  MSALSilentParams,\n  MSALAccount,\n  MSALSignoutParams,\n  IPublicClientApplication,\n} from './types';\n\nexport class PublicClientApplication implements IPublicClientApplication {\n  private isInitialized: boolean = false;\n\n  constructor(private readonly config: MSALConfiguration) {}\n\n  public async init() {\n    if (!this.isInitialized) {\n      await RNMSAL.createPublicClientApplication(this.config);\n      this.isInitialized = true;\n    }\n    return this;\n  }\n\n  public async acquireToken(params: MSALInteractiveParams) {\n    this.validateIsInitialized();\n    return await RNMSAL.acquireToken(params);\n  }\n\n  public async acquireTokenSilent(params: MSALSilentParams) {\n    this.validateIsInitialized();\n    return await RNMSAL.acquireTokenSilent(params);\n  }\n\n  public async getAccounts() {\n    this.validateIsInitialized();\n    return await RNMSAL.getAccounts();\n  }\n\n  public async getAccount(accountIdentifier: string) {\n    this.validateIsInitialized();\n    return await RNMSAL.getAccount(accountIdentifier);\n  }\n\n  public async removeAccount(account: MSALAccount) {\n    this.validateIsInitialized();\n    return await RNMSAL.removeAccount(account);\n  }\n\n  public async signOut(params: MSALSignoutParams) {\n    this.validateIsInitialized();\n    return await Platform.select({\n      ios: async () => await RNMSAL.signout(params),\n      default: async () => await RNMSAL.removeAccount(params.account),\n    })();\n  }\n\n  private validateIsInitialized() {\n    if (!this.isInitialized) {\n      throw new Error(\n        'PublicClientApplication is not initialized. You must call the `init` method before any other method.'\n      );\n    }\n  }\n}\n"]}